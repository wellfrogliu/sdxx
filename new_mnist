
def conv2(x_input, w):
    return tf.nn.conv2d(x_input, w, [1,2,2,1], padding='SAME')

def pool_max(shape):
    return tf.nn.max_pool(shape, [1,2,2,1], strides=[1,2,2,1], padding='SAME')

def weight_value(shape):
    value = tf.truncated_normal(shape, stddev=0.1)
    return tf.variables_initializer(value)

def bias_value(shape):
    value = tf.constant(shape)
    return tf.variables_initializer(value)

x = tf.placeholder(tf.float32, [None, 28*28*1])
y = tf.placeholder(tf.float32, [None, 10])

x1 = tf.reshape(x, [-1,28,28,1])
w1 = weight_value([5*5*1,32])
b1 = bias_value([32])
c1 = conv2(x1, w1)
r1 = tf.nn.relu(c1 + b1)
p1 = pool_max(r1)

w2 = weight_value([5*5*32, 64])
b2 = bias_value([64])
